{"version":3,"sources":["components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Notification","text","type","className","Filter","value","handleInput","onChange","PersonForm","name","number","handleInputName","handleInputNumber","handleClickSubmit","onClick","Persons","list","filter","handleClickRemove","person","toLowerCase","includes","map","key","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationText","setNotificationText","notificationType","setNotificationType","useEffect","personService","event","target","preventDefault","newPerson","some","window","confirm","personId","find","catch","error","setTimeout","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.109c3df9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ text, type }) => {\r\n    if (text === null) { return null }\r\n    return (\r\n        <div className={type}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = ({value, handleInput}) => {\r\n    return <div>filter shown with <input value={value} onChange={handleInput} /></div>\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ name, number, handleInputName, handleInputNumber, handleClickSubmit }) => {\r\n    return <form>\r\n        <div>name: <input value={name} onChange={handleInputName} /></div>\r\n        <div>number: <input value={number} onChange={handleInputNumber} /></div>\r\n        <div><button type=\"submit\" onClick={handleClickSubmit}>add</button></div>\r\n    </form>\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({list, filter, handleClickRemove}) => {\r\n    return list.filter(\r\n        person => person.name.toLowerCase()\r\n        .includes(filter.toLowerCase()))\r\n        .map(person => <p key={person.name}>{person.name} {person.number}<button onClick={()=>handleClickRemove(person.name)}>delete</button></p>)\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationText, setNotificationText] = useState('')\n  const [notificationType, setNotificationType] = useState('')\n  const handleInputNewName = (event) => (setNewName(event.target.value))\n  const handleInputNewNumber = (event) => (setNewNumber(event.target.value))\n  const handleInputFilter = (event) => (setFilter(event.target.value))\n  const handleClickSubmit = (event) => {\n    event.preventDefault()\n    const newPerson = { name: newName, number: newNumber }\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personId = persons.find(person => person.name === newName).id\n        personService.update(personId, newPerson).then(data => {\n          setPersons(persons.map(person => person.id === data.id ? data : person))\n          setNewName('')\n          setNewNumber('')\n        })\n          .catch(error => {\n            if (!error.response) {\n              setNotificationText(`Information of ${newPerson.name} has already been removed from server`)\n            }\n            else { setNotificationText(error.response.data.error) }\n            setNotificationType('error')\n            setTimeout(() => { setNotificationText(null) }, 5000)\n          })\n      }\n      return\n    }\n    personService.create(newPerson).then(data => {\n      setPersons(persons.concat(data))\n      setNewName('')\n      setNewNumber('')\n      setNotificationText(`Added ${data.name}`)\n      setNotificationType('success')\n      setTimeout(() => { setNotificationText(null) }, 5000)\n    })\n      .catch(error => {\n        setNotificationText(error.response.data.error)\n        setNotificationType('error')\n        setTimeout(() => { setNotificationText(null) }, 5000)\n      }\n      )\n  }\n  const handleClickRemove = (name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      const personToDelete = persons.find(person => person.name === name)\n      personService.remove(personToDelete.id)\n        .then(setPersons(persons.filter(person => person.id !== personToDelete.id)))\n\n    }\n  }\n  useEffect(() => {\n    personService.getAll().then(data => setPersons(data))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={notificationText} type={notificationType} />\n      <Filter value={filter} handleInput={handleInputFilter} />\n      <h3>Add a new</h3>\n      <PersonForm name={newName} number={newNumber}\n        handleInputName={handleInputNewName} handleInputNumber={handleInputNewNumber}\n        handleClickSubmit={handleClickSubmit} />\n      <h3>Numbers</h3>\n      <Persons list={persons} filter={filter} handleClickRemove={handleClickRemove} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}